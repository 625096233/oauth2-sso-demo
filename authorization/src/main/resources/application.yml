# SECURITY
security:
  oauth2:
    client:
      client-id: demo
      client-secret: demo
      scope: read, write
      auto-approve-scopes: .*
    authorization:
      check-token-access: permitAll()
# SERVER
server:
  port: 9999
  context-path: /uaa
# LOGGING
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
# SPRING
spring:
  application:
    name: authorizationserver
  # POSTGRE
  #datasource:
  #  url: jdbc:postgresql://localhost:5432/oauth2
  #  driver-class-name: org.postgresql.Driver
  #  username: pguser
  #  password: pguser
  #jpa:
  #  database-platform: org.hibernate.dialect.PostgreSQLDialect
  # H2 DB
  datasource:
      url: jdbc:h2:~/h2db/oauth2poc;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      driver-class-name: org.h2.Driver
      username: sa
      password: sa
  jpa:
      database-platform: org.hibernate.dialect.H2Dialect
  hibernate:
    ddl-aut: validate
# LIQUIBASE
liquibase:
  enabled: true
  change-log: classpath:/db/changelog/db-changelog-master.xml
  drop-first: true


